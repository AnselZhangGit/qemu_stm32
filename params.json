{"name":"Qemu STM32","tagline":"QEMU with an STM32 microcontroller implementation","body":"This is a fork of the QEMU emulator which includes an implementation of the STM32 microcontroller.  I have not been actively working on this project but will try to when I have time.  I welcome any source code contributions.\r\n\r\nI have not yet submitted any patches to QEMU mainstream for a couple of reasons:\r\n\r\n1. This project is still in a state of flux, and I would like the flexibility to change it without going through a patch process.\r\n2. I suspect it will take some time and effort to go through the submission process - time I would rather put into the project itself.  I have also made changes to the core framework, which may not be acceptable in the main QEMU branch or which will need to be modified.  I don't see much disadvantage to leaving this as a fork.  That being said, there are core components that could benefit other parts of QEMU (i.e. The clock tree objects and unit testing framework) that should be submitted.\r\n\r\nGoals (in no particular order):\r\n* Make compliant with the new QOM framework.  Make use of properties as much as possible to provide visibility into the virtual machine.  For example, the UARTs can have properties indicating their baud rate and configuration.  Also, provide properties to be used for simulating exceptional situations.  For example, the UART could provide properties used to simulate parity and framing errors.  These properties provide debugging advantages over bare hardware and may even allow for automated testing.\r\n* Provide complete unit testing of the STM32 implementation â€“ if the unit tests pass you should be confident nothing is broken.\r\n* When appropriate, modify core QEMU or add new generic components (e.g. The clock tree objects and unit testing framework).  Submit these components to the main QEMU project if possible.\r\n* Continue to add new STM32 peripherals (SPI, timers, etc.) and enhance existing peripherals.\r\n* Add new development boards, for example the low cost STM32 discovery boards.  Someone has also suggested supporting the CrazyFlie Nano Quadcopter.  Also add support for the Cortex M4 architecture.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}